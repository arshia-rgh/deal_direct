services:
  server:
    build:
      context: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_started
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    env_file:
      - .env
    networks:
      - app_network

  db:
    image: postgres
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    expose:
      - 5432
    networks:
      - app_network


  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    networks:
      - app_network
    depends_on:
      - db
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name:
      rabbitmq
    ports:
      - "5673:5672"
      - "15672:15672"
    networks:
      - app_network

  redis:
    image: redis:alpine
    ports:
      - "6380:6380"
volumes:
  db-data:

networks:
  app_network:
    driver: bridge
